// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  name       String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Contact    Contact[]
  Address    Address[]

  @@map("users")
}

enum ContactType {
  PERSONAL
  WORK
  OTHER
}

model Contact {
  id         Int         @id @default(autoincrement())
  user_id    Int         @db.Int
  name       String      @db.VarChar(255)
  contact    String      @db.VarChar(255)
  type       ContactType @default(PERSONAL)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("contacts")
}

model Address {
  id          Int      @id @default(autoincrement())
  user_id     Int      @db.Int
  address     String   @db.VarChar(255)
  city        String   @db.VarChar(255)
  state       String   @db.VarChar(255)
  country     String   @db.VarChar(255)
  postal_code String   @db.VarChar(255)
  is_default  Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt()

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("addresses")
}
